#!/bin/zsh

if_darwin()
{
  [[ "$(uname)" =~ 'Darwin' ]]
}

if_wsl()
{
  [[ "$(uname -r)" =~ 'Microsoft' ]]
}

if_Android()
{
  [[ "$(uname -o)" =~ Android ]]
}

if_ArchLinux()
{
  [[ $(sed -rn 's|^ID=(.+)$|\1|p' /etc/os-release) =~ ^arch ]]
}

if_openSUSE()
{
  [[ $(sed -rn 's|^ID="(.+)"$|\1|p' /etc/os-release) =~ ^opensuse ]]
}

if_NixOS()
{
  [[ $(sed -rn 's|^ID=(.+)$|\1|p' /etc/os-release) =~ ^nixos ]]
}

cd "$HOME"

echo "Updating the yadm repo origin URL"
yadm remote set-url origin "git@github.com:71e6fd52/dotfile.git"

echo "Decrypt data"
yadm decrypt

echo "Init submodules"
yadm submodule update --recursive --init

if if_ArchLinux
then
  echo "Install Package"
  readonly packages=(
    moreutils exa bat fd ripgrep sd axel unarchiver jq httpie
    neovim python-pynvim
    yarn python rustup ruby
    pkgfile openssh pass tmux
  )
  sudo pacman -S --noconfirm --needed $packages
  sudo pacman -D --noconfirm --asexplicit $packages
  if command pacman -Qq xorg-server 2>/dev/null ; then
    readonly xorg_packages=(
      emacs
      firefox-nightly-zh-cn
    )
  sudo pacman -S --noconfirm --needed $xorg_packages
  sudo pacman -D --noconfirm --asexplicit $xorg_packages
  fi
elif if_Android; then
  echo "Install Package"
  readonly packages=(
    moreutils exa bat ripgrep axel jq
    neovim
    python rust ruby
  )
  pkg install $packages
  pip install --user pynvim
fi

if command -v nvim >/dev/null 2>&1; then
  echo "Bootstraping NeoVim"
  nvim '+PlugUpdate' '+qall'
fi

if command -v emacs >/dev/null 2>&1; then
  echo "Clone Emacs config"
  git clone git@github.com:71e6fd52/emacs.d.git ~/.emacs.d
fi

if if_NixOS; then
  echo "Since current operator system is NixOS, the follow step should preform in configuration.nix."
  exit
fi

if ! if_ArchLinux && [[ ! -s ~/.grml-zshrc ]]; then
  wget -O ~/.grml-zshrc https://git.grml.org/f/grml-etc-core/etc/zsh/zshrc
fi

if command -v yarn >/dev/null 2>&1 ; then
  echo "Install NodeJS Package"
  readonly node_packages=(
    cz-cli cz-conventional-changelog standard-version
  )
  yarn global add $node_packages
fi

if command -v gem >/dev/null 2>&1 ; then
  echo "Install Ruby Package"
  readonly ruby_packages=(
    pry neovim
  )
  gem install $ruby_packages
fi

if command -v rustup >/dev/null 2>&1; then
  echo "Install rust"
  rustup default nightly
  rustup update
  rustup component add clippy rls rust-analysis

  mkdir -p ~/.zfunc
  rustup completions zsh cargo > ~/.zfunc/_cargo
fi

echo "get zsh plugin"
if if_ArchLinux; then
  sudo pacman -S --noconfirm --needed zsh-syntax-highlighting zsh-autosuggestions zsh-completions
else
  clone_or_update()
  {
    if [[ -d "$2" -a -n "$(ls "$2")" ]]; then
      cd "$2" && git remote set-uri origin "$1" && git pull
    else
      git clone "$1" "$2"
    fi
  }
  clone_or_update https://github.com/zsh-users/zsh-syntax-highlighting.git ~/opt/zsh-syntax-highlighting
  clone_or_update https://github.com/zsh-users/zsh-autosuggestions.git ~/opt/zsh-autosuggestions
  clone_or_update https://github.com/zsh-users/zsh-completions.git ~/opt/zsh-completions
fi

if if_wsl
then
  echo "Turn to wsldm"
  yes | yadm --yadm-dir $HOME/.wsldm clone git@github.com:71e6fd52/wsl-dotfile.git
else
  echo "Please follow https://wiki.archlinux.org/index.php/Security to hardening system"
fi
